## WARNING ##
# This file is auotmaticly generated, any changes
# will be overwritten.

##################################################
################  COMMON ENTITIES  ###############
##################################################

###############  input_text:  #################
input_text:
  frontdoor_status_report:
    name: frontdoor Status report

###############  input_number:  #################
input_number:
  frontdoor_lock_command:
    name: frontdoor Lock command
    min: 0
    max: 999

  frontdoor_lock_user:
    name: frontdoor Lock user
    min: 0
    max: 999

###############  input_boolean:  #################
input_boolean:
  frontdoor_lock_notifications:
    name: frontdoor Lock Notifications
  frontdoor_dooraccess_notifications:
    name: frontdoor Door Notifications
  frontdoor_garageacess_notifications:
    name: frontdoor Garage Notifications
  frontdoor_reset_lock:
    name: frontdoor reset lock

###################  sensor:  ####################
sensor:
  - platform: time_date
    display_options:
      - "time"
      - "date"
      - "date_time"
      - "date_time_iso"
      - "time_date"
      - "time_utc"
      - "beat"

  - platform: template
    sensors:
      frontdoor_ac_last_changed:
        friendly_name: frontdoor AC Last Changed From Present
        unit_of_measurement: "seconds"
        value_template: >-
          {% set CONTROL = 'input_number.frontdoor_lock_command' %}
          {% set CONTROLlc = states.input_number[CONTROL.split('.')[-1]].last_changed %}
          {{ (as_timestamp(now()) - as_timestamp(CONTROLlc)) | float }}

      frontdoor_uc_last_changed:
        friendly_name: frontdoor UC Last Changed From Present
        unit_of_measurement: "seconds"
        value_template: >-
          {% set CONTROL = 'input_number.frontdoor_lock_user' %}
          {% set CONTROLlc = states.input_number[CONTROL.split('.')[-1]].last_changed %}
          {{ (as_timestamp(now()) - as_timestamp(CONTROLlc)) | float }}

###################  script    :  ####################
script:
  frontdoor_reset_lock:
    sequence:
      - service: script.frontdoor_manual_notify
        data_template:
          title: "reset"
          message: "frontdoor"

  frontdoor_conditional_notify:
    sequence:
      - condition: template
        value_template: >-
          {% set inputbool = boolean %}
          {% if states(inputbool) == 'on'%}
            true
          {% else %}
            false
          {% endif %}
      - service: script.frontdoor_manual_notify
        data_template:
          title: "{{title}}"
          message: "{{message}}"

###################  automation:  ####################
automation:
  # - alias: frontdoor-ac-uc-sensors_last_changed_update
  #   initial_state: false
  #   trigger:
  #     - platform: time_pattern
  #       seconds: '/1'
  #   action:
  #     - service: homeassistant.update_entity
  #       entity_id:
  #         - sensor.frontdoor_ac_last_changed
  #         - sensor.frontdoor_uc_last_changed

  - alias: frontdoor Lock Command
    trigger:
      platform: state
      entity_id: sensor.schlage_be469zp_access_control_frontdoor
    condition:
      - condition: state
        entity_id: "binary_sensor.allow_automation"
        state: "on"
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.frontdoor_lock_command
          value: >-
            {{ states.sensor.schlage_be469zp_access_control_frontdoor.state | int}}

  - alias: frontdoor User Command
    trigger:
      platform: state
      entity_id: sensor.schlage_be469zp_alarm_level_frontdoor
    condition:
      - condition: state
        entity_id: "binary_sensor.allow_automation"
        state: "on"
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.frontdoor_lock_user
          value: >-
            {{ states.sensor.schlage_be469zp_alarm_level_frontdoor.state | int}}

  - alias: frontdoor RF Locked State Changed
    trigger:
      platform: state
      entity_id: lock.schlage_be469zp_locked_frontdoor
    condition:
      - condition: state
        entity_id: "binary_sensor.allow_automation"
        state: "on"
      - condition: template
        value_template: >-
          {% set lockuser =  states.sensor.schlage_be469zp_alarm_level_frontdoor.state | int %}
          {% set lockcmd = states.sensor.schlage_be469zp_access_control_frontdoor.state | int %}
          {% set timediff = (as_timestamp(now()) - as_timestamp(states.sensor.schlage_be469zp_access_control_frontdoor.last_changed)) | float %}
          {{ lockuser | int == 0 and timediff > 2 }}
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.frontdoor_lock_command
          value: >-
            {% set lockcmd = states.sensor.schlage_be469zp_access_control_frontdoor.state | int %}
            {% set lockstate = states.lock.schlage_be469zp_locked_frontdoor.state %}
            {% if (lockstate == 'locked') %}
               66
            {% elif (lockstate == 'unlocked') %}
               67
            {% else %}
               {{ lockcmd | int}}
            {% endif %}


  # {% set doordiff = as_timestamp(now()) - as_timestamp(states.lock.be666zp_connect_smart_deadbolt_locked.last_changed) %}
  # {% set contdiff = as_timestamp(now()) - as_timestamp(states.sensor.be666zp_connect_smart_deadbolt_access_control.last_changed) %}
  # {% set atv = 24 if (doordiff) < 15 and (contdiff) > 15 and (states.lock.be666zp_connect_smart_deadbolt_locked.state) == 'locked' else alarm_type_value %}
  # {% set atv = 25 if (doordiff) < 15 and (contdiff) > 15 and (states.lock.be666zp_connect_smart_deadbolt_locked.state) == 'unlocked' else alarm_type_value %}

  - alias: frontdoor Status Report
    trigger:
      platform: state
      entity_id: input_number.frontdoor_lock_command, input_number.frontdoor_lock_user
    condition:
      - condition: state
        entity_id: "binary_sensor.allow_automation"
        state: "on"
    action:
      - service: input_text.set_value
        data_template:
          entity_id: input_text.frontdoor_status_report
          value: >-
            {% set UC = 'sensor.schlage_be469zp_alarm_level_frontdoor' %}
            {% set AC = 'sensor.schlage_be469zp_access_control_frontdoor' %}
            {% set UClc = states.sensor[UC.split('.')[-1]].last_changed %}
            {% set AClc = states.sensor[AC.split('.')[-1]].last_changed %}

            {% set usercode_value = states.input_number.frontdoor_lock_user.state | int | string  %}
            {% set alarm_type_value = states.input_number.frontdoor_lock_command.state | int | string %}

            {% set atv = 0 %}
            {% if (alarm_type_value | int == 66 or alarm_type_value | int == 67) %}
              {% if 'alarm_type' in AC %}
                 {% set atv = alarm_type_value | int - 42 %}
              {% elif 'access_control' in AC %}
                 {% set atv = alarm_type_value | int - 63 %}
              {% endif %}
            {% endif %}
            {% if atv != 0 %}
               {% set alarm_type_value = atv %}
            {% endif %}

            {% set alarm_type_value = alarm_type_value | string %}

            {% if 'alarm_type' in AC %}
              {% set alarm_type_general_actions = {
                '999':'Kwikset',
                '0':'No Status Reported',
                '9':'Lock Jammed',
                '17':'Keypad Lock Jammed',
                '21':'Manual Lock',
                '22':'Manual Unlock',
                '23':'RF Lock Jammed',
                '24':'RF Lock',
                '25':'RF Unlock',
                '26':'Auto Lock Jammed',
                '27':'Auto Lock',
                '32':'All Codes Deleted',
                '161':'Bad Code Entered',
                '167':'Battery Low',
                '168':'Battery Critical',
                '169':'Battery Too Low To Operate Lock' } %}
              {% set alarm_type_lock_actions = {
                '18':'Keypad Lock',
                '19':'Keypad Unlock',
                '162':'Lock Code Attempt Outside of Schedule' } %}
              {% set alarm_type_code_actions = {
                '33':'Code Deleted',
                '112':'Code Changed',
                '113':'Duplicate Code' } %}
            {% elif 'access_control' in AC %}
              {% set alarm_type_general_actions = {
                '999':'Schlage',
                '1':'Manual Lock',
                '2':'Manual Unlock',
                '3':'RF Lock',
                '4':'RF Unlock',
                '7':'Manual not fully locked',
                '8':'RF not fully locked',
                '9':'Auto Lock locked',
                '10':'Auto Lock not fully locked',
                '11':'Lock Jammed',
                '16':'Keypad temporary disabled',
                '17':'Keypad busy' } %}
              {% set alarm_type_lock_actions = {
                '5':'Keypad Lock',
                '6':'Keypad Unlock' } %}
              {% set alarm_type_code_actions = {
                '12':'All User Codes Deleted',
                '13':'Single Code Deleted',
                '14':'New User Code Added',
                '15':'Duplicate Code' } %}
            {% endif %}
            {% if alarm_type_value in alarm_type_code_actions %}
              {{alarm_type_value}};{{ alarm_type_code_actions[alarm_type_value] }};{{usercode_value}}
            {% elif alarm_type_value in alarm_type_lock_actions  %}
              {{alarm_type_value}};{{ alarm_type_lock_actions[alarm_type_value] }};{{usercode_value}}
            {% elif alarm_type_value in alarm_type_general_actions %}
              {{alarm_type_value}};{{ alarm_type_general_actions[alarm_type_value] }};{{usercode_value}}
            {% else %}
              {{alarm_type_value}};{{alarm_type_value}}-Unknown Alarm Type Value;{{usercode_value}}
            {% endif %}

  - alias: frontdoor Lock Notifications
    trigger:
      platform: state
      entity_id: input_text.frontdoor_status_report
    condition:
      - condition: state
        entity_id: "binary_sensor.allow_automation"
        state: "on"
      - condition: template
        value_template: >-
          {% set report = states.input_text.frontdoor_status_report.state %}
          {% set a = report.split(';') %}
          {% if (a|length) != 3 or (a[2] == "0") %} 
            {{ true }}
          {% else %}
            {{ true }}
          {% endif %}
    action:
      - service: script.frontdoor_conditional_notify
        data_template:
          boolean: input_boolean.frontdoor_lock_notifications
          title: frontdoor
          message: >-
            {% set report = states.input_text.frontdoor_status_report.state %}
            {% set a = report.split(';') %}
            {{ a[1] }}

  - alias: frontdoor User Notifications
    trigger:
      platform: state
      entity_id: input_text.frontdoor_status_report
    condition:
      - condition: state
        entity_id: "binary_sensor.allow_automation"
        state: "on"
      - condition: template
        value_template: >-
          {% set report = states.input_text.frontdoor_status_report.state %}
          {% set a = report.split(';') %}
          {% if (a|length) == 3 and (a[2] | int > 0) %} 
            {{ true }}
          {% else %}
            {{ false }}
          {% endif %}
      - condition: template
        value_template: >-
          {% set report = states.input_text.frontdoor_status_report.state %}
          {% set a = report.split(';') %}
          {% set entity_id = 'notify_frontdoor_' + a[2] %}
          {% set notify = states['input_boolean'][entity_id].state %}
          {{ notify == "on" }}
    action:
      - service: script.frontdoor_manual_notify
        data_template:
          title: >-
            {% set report = states.input_text.frontdoor_status_report.state %}
            {% set a = report.split(';') %}
            {{ a[1] }}
          message: >-
            {% set report = states.input_text.frontdoor_status_report.state %}
            {% set a = report.split(';') %}
            {% set entity_id = 'input_text.frontdoor_name_' + a[2] %}
            {% set user = states(entity_id) %}
            {{ user }}

  - alias: frontdoor Sensor Close
    condition:
      - condition: state
        entity_id: "binary_sensor.allow_automation"
        state: "on"
    trigger:
      entity_id: binary_sensor.fake
      platform: state
      to: "off"
    action:
      - service: script.frontdoor_conditional_notify
        data_template:
          boolean: input_boolean.frontdoor_dooraccess_notifications
          title: frontdoor
          message: "Closed"

  - alias: frontdoor Sensor Opened
    condition:
      - condition: state
        entity_id: "binary_sensor.allow_automation"
        state: "on"
    trigger:
      entity_id: binary_sensor.fake
      platform: state
      to: "on"
    action:
      - service: script.frontdoor_conditional_notify
        data_template:
          boolean: input_boolean.frontdoor_dooraccess_notifications
          title: frontdoor
          message: "Opened"

  # - alias: frontdoor Add Code
  #   trigger:
  #     entity_id: binary_sensor.active_frontdoor_1,binary_sensor.active_frontdoor_2,binary_sensor.active_frontdoor_3,binary_sensor.active_frontdoor_4,binary_sensor.active_frontdoor_5,binary_sensor.active_frontdoor_6,binary_sensor.active_frontdoor_7,binary_sensor.active_frontdoor_8,binary_sensor.active_frontdoor_9,binary_sensor.active_frontdoor_10
  #     platform: state
  #     to: "on"
  #   condition:
  #     - condition: state
  #       entity_id: "binary_sensor.allow_automation"
  #       state: "on"
  #   action:
  #     - choose:
  #         - conditions: >
  #             {{ False }}
  #         # this comment preserves formating
  #           sequence:
  #             - service: ozw.set_usercode
  #               data_template:
  #                 entity_id: lock.schlage_be469zp_locked_frontdoor
  #                 code_slot: >-
  #                   {% set object_id = trigger.to_state.object_id %}
  #                   {% set index = object_id.rfind('_') + 1 %}
  #                   {% set code_slot = object_id[index:] %}
  #                   {{ code_slot  }}
  #                 usercode: >-
  #                   {% set object_id = trigger.to_state.object_id %}
  #                   {% set index = object_id.rfind('_') + 1 %}
  #                   {% set code_slot = object_id[index:] %}    
  #                   {% set codetext = 'frontdoor_pin_' + code_slot | string %}
  #                   {% set code = states['input_text'][codetext].state %}
  #                   {{ code | string }}
  #         - conditions: >
  #             {{ False == False }}
  #         # this comment preserves formating
  #           sequence:
  #             - service: lock.set_usercode
  #               data_template:
  #                 node_id: >-
  #                   {{ state_attr('lock.schlage_be469zp_locked_frontdoor','node_id') }}
  #                 code_slot: >-
  #                   {% set object_id = trigger.to_state.object_id %}
  #                   {% set index = object_id.rfind('_') + 1 %}
  #                   {% set code_slot = object_id[index:] %}
  #                   {{ code_slot  }}
  #                 usercode: >-
  #                   {% set object_id = trigger.to_state.object_id %}
  #                   {% set index = object_id.rfind('_') + 1 %}
  #                   {% set code_slot = object_id[index:] %}    
  #                   {% set codetext = 'frontdoor_pin_' + code_slot | string %}
  #                   {% set code = states['input_text'][codetext].state %}
  #                   {{ code | string }}

  - alias: frontdoor Update Code
    trigger:
      entity_id: input_text.frontdoor_pin_1,input_text.frontdoor_pin_2,input_text.frontdoor_pin_3,input_text.frontdoor_pin_4,input_text.frontdoor_pin_5,input_text.frontdoor_pin_6,input_text.frontdoor_pin_7,input_text.frontdoor_pin_8,input_text.frontdoor_pin_9,input_text.frontdoor_pin_10
      platform: state
    condition:
      - condition: state
        entity_id: "binary_sensor.allow_automation"
        state: "on"
      - condition: template
        value_template: >-
          {% set object_id = trigger.to_state.object_id %}
          {% set index = object_id.rfind('_') + 1 %}
          {% set code_slot = object_id[index:] %}
          {% set b = 'input_boolean.enabled_frontdoor_' + code_slot | string %}
          {{ is_state(b, 'on') and (trigger.from_state.state != trigger.to_state.state)}}
    action:
      - service: persistent_notification.create
        data_template:
          title: frontdoor LOCK MANAGER
          message: >-
            {% set object_id = trigger.to_state.object_id %}
            {% set index = object_id.rfind('_') + 1 %}
            {% set code_slot = object_id[index:] %}
            {{ 'You changed the PIN for code  ' + code_slot | string + '. Please enable it in order to make it active.'}}
      - service: input_boolean.turn_off
        data_template:
          entity_id: >-
            {% set object_id = trigger.to_state.object_id %}
            {% set index = object_id.rfind('_') + 1 %}
            {% set code_slot = object_id[index:] %}
            {{ 'input_boolean.enabled_frontdoor_' + code_slot | string }}

  - alias: frontdoor Reset
    condition:
      - condition: state
        entity_id: "binary_sensor.allow_automation"
        state: "on"
    trigger:
      entity_id: input_boolean.frontdoor_reset_lock
      platform: state
      from: "off"
      to: "on"
    action:
      - service: script.frontdoor_reset_lock
      - service: input_boolean.turn_off
        entity_id: input_boolean.frontdoor_reset_lock

  # - alias: frontdoor Clear Code
  #   trigger:
  #     entity_id: binary_sensor.active_frontdoor_1,binary_sensor.active_frontdoor_2,binary_sensor.active_frontdoor_3,binary_sensor.active_frontdoor_4,binary_sensor.active_frontdoor_5,binary_sensor.active_frontdoor_6,binary_sensor.active_frontdoor_7,binary_sensor.active_frontdoor_8,binary_sensor.active_frontdoor_9,binary_sensor.active_frontdoor_10
  #     platform: state
  #     to: "off"
  #   condition:
  #     - condition: state
  #       entity_id: "binary_sensor.allow_automation"
  #       state: "on"
  #   action:
  #     - choose:
  #         - conditions: >
  #             {{ False }}
  #         # this comment preserves formating
  #           sequence:
  #             - service: ozw.clear_usercode
  #               data_template:
  #                 entity_id: lock.schlage_be469zp_locked_frontdoor
  #                 code_slot: >-
  #                   {% set object_id = trigger.to_state.object_id %}
  #                   {% set index = object_id.rfind('_') + 1 %}
  #                   {% set code_slot = object_id[index:] %}
  #                   {{ code_slot  }}
  #         - conditions: >
  #             {{ False == False }}
  #         # this comment preserves formating
  #           sequence:
  #             - service: lock.set_usercode
  #               data_template:
  #                 node_id: >-
  #                   {{ state_attr('lock.schlage_be469zp_locked_frontdoor','node_id') }}
  #                 code_slot: >-
  #                   {% set object_id = trigger.to_state.object_id %}
  #                   {% set index = object_id.rfind('_') + 1 %}
  #                   {% set code_slot = object_id[index:] %}
  #                   {{ code_slot  }}
  #                 usercode: >-
  #                   {{ range(1000, 9999) | random | int }}
  #             - service: lock.clear_usercode
  #               data_template:
  #                 node_id: >-
  #                   {{ state_attr('lock.schlage_be469zp_locked_frontdoor','node_id') }}
  #                 code_slot: >-
  #                   {% set object_id = trigger.to_state.object_id %}
  #                   {% set index = object_id.rfind('_') + 1 %}
  #                   {% set code_slot = object_id[index:] %}
  #                   {{ code_slot  }}

  - alias: frontdoor Decrement Access Count
    trigger:
      platform: state
      entity_id: input_text.frontdoor_status_report
    condition:
      - condition: state
        entity_id: "binary_sensor.allow_automation"
        state: "on"
      - condition: template
        # Check for Keypad Unlock code
        value_template: >-
          {% set report = states.input_text.frontdoor_status_report.state %}
          {% set a = report.split(';') %}
          {% if (a|length) == 3 and (a[2] | int > 0) %} 
             {{ (a[0] | int == 19) or (a[0] | int == 6)  }}
          {% else %}
            {{ false }}
          {% endif %}
    action:
      - service: input_number.decrement
        data_template:
          entity_id: >-
            {% set report = states.input_text.frontdoor_status_report.state %}
            {% set a = report.split(';') %}
            {{ 'input_number.accesscount_frontdoor_' + a[2] }}
