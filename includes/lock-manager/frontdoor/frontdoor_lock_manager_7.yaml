
############  input_number:  #####################  
input_number:
  accesscount_frontdoor_7:
    name: Access Count
    min: 0
    max: 100
    step: 1
    unit_of_measurement: "Openings Left"

#################  input_datetime:  ##############  
input_datetime:
  end_date_frontdoor_7:
    name: 'End'
    has_time: false
    has_date: true
  start_date_frontdoor_7:
    name: 'Start'
    has_time: false
    has_date: true

  sun_start_date_frontdoor_7:
    name: 'Start'
    has_time: true
    has_date: false
  sun_end_date_frontdoor_7:
    name: 'End'
    has_time: true
    has_date: false

  mon_start_date_frontdoor_7:
    name: 'Start'
    has_time: true
    has_date: false
  mon_end_date_frontdoor_7:
    name: 'End'
    has_time: true
    has_date: false

  tue_start_date_frontdoor_7:
    name: 'Start'
    has_time: true
    has_date: false
  tue_end_date_frontdoor_7:
    name: 'End'
    has_time: true
    has_date: false

  wed_start_date_frontdoor_7:
    name: 'Start'
    has_time: true
    has_date: false
  wed_end_date_frontdoor_7:
    name: 'End'
    has_time: true
    has_date: false

  thu_start_date_frontdoor_7:
    name: 'Start'
    has_time: true
    has_date: false
  thu_end_date_frontdoor_7:
    name: 'End'
    has_time: true
    has_date: false

  fri_start_date_frontdoor_7:
    name: 'Start'
    has_time: true
    has_date: false
  fri_end_date_frontdoor_7:
    name: 'End'
    has_time: true
    has_date: false

  sat_start_date_frontdoor_7:
    name: 'Start'
    has_time: true
    has_date: false
  sat_end_date_frontdoor_7:
    name: 'End'
    has_time: true
    has_date: false


####################  input_text:  ###############  
input_text:
  frontdoor_name_7:
    name: 'Name'
  frontdoor_pin_7:
    name: 'PIN'

#################  input_boolean: ################  
input_boolean:
  notify_frontdoor_7:
    name: 'Notifications'
  daterange_frontdoor_7:
    name: 'Use Date Range'
  smtwtfs_frontdoor_7:
    name: 'Use SMTWTFS'
  enabled_frontdoor_7:
    name: 'Enabled'
  accesslimit_frontdoor_7:
    name: 'Limit Access Count'
    initial: off
  reset_codeslot_frontdoor_7:
    name: 'Reset Code Slot'
    initial: off

  sun_frontdoor_7:
    name: 'Sunday'
    initial: on

  mon_frontdoor_7:
    name: 'Monday'
    initial: on

  tue_frontdoor_7:
    name: 'Tuesday'
    initial: on

  wed_frontdoor_7:
    name: 'Wednesday'
    initial: on

  thu_frontdoor_7:
    name: 'Thursday'
    initial: on

  fri_frontdoor_7:
    name: 'Friday'
    initial: on

  sat_frontdoor_7:
    name: 'Saturday'
    initial: on

  sun_inc_frontdoor_7:
    name: 'include (on)/exclude (off)'
    initial: on

  mon_inc_frontdoor_7:
    name: 'include (on)/exclude (off)'
    initial: on

  tue_inc_frontdoor_7:
    name: 'include (on)/exclude (off)'
    initial: on

  wed_inc_frontdoor_7:
    name: 'include (on)/exclude (off)'
    initial: on

  thu_inc_frontdoor_7:
    name: 'include (on)/exclude (off)'
    initial: on

  fri_inc_frontdoor_7:
    name: 'include (on)/exclude (off)'
    initial: on

  sat_inc_frontdoor_7:
    name: 'include (on)/exclude (off)'
    initial: on

################  automation: #################  
automation:

- alias: synchronize_codeslot_frontdoor_7
  initial_state: true
  trigger:
    - platform: state
      entity_id: "binary_sensor.pin_synched_frontdoor_7"
      to: 'off'
    - platform: time_pattern
      seconds: "/10"      
  condition:
    - condition: state
      entity_id: "binary_sensor.allow_automation"
      state: "on"
    - condition: state
      entity_id: "binary_sensor.pin_synched_frontdoor_7"
      state: "off"
    - condition: template
      value_template: >-
        {{ states("sensor.frontdoor_code_slot_7") != "unknown" }}
  action:
    # - service: persistent_notification.create
    #   data_template:
    #     title: 7
    #     message: '{{ states("sensor.frontdoor_code_slot_7") }} {{ now() }}'
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ is_state('binary_sensor.active_frontdoor_7','on') }}"
          sequence:
            - choose:
                  - conditions: >
                      {{ False }}
                  # this comment preserves formating
                    sequence:
                      - service: ozw.set_usercode
                        data_template:
                          entity_id: lock.schlage_be469zp_locked_frontdoor
                          code_slot: >-
                            {{ 7 }}
                          usercode: >-
                            {% set object = states('input_text.frontdoor_pin_7') %}
                            {{ object.strip() }}
                  - conditions: >
                      {{ False == False }}
                  # this comment preserves formating
                    sequence:
                      - service: lock.set_usercode
                        data_template:
                          node_id: >-
                            {{ state_attr('lock.schlage_be469zp_locked_frontdoor','node_id') }}
                          code_slot: >-
                            {{ 7 }}
                          usercode: >-
                            {% set object = states('input_text.frontdoor_pin_7') %}
                            {{ object.strip() }}
        - conditions:
            - condition: template
              value_template: "{{ is_state('binary_sensor.active_frontdoor_7','off') }}"
          sequence:
            - choose:
                  - conditions: >
                      {{ False }}
                  # this comment preserves formating
                    sequence:
                      - service: ozw.clear_usercode
                        data_template:
                          entity_id: lock.schlage_be469zp_locked_frontdoor
                          code_slot: >-
                            {{ 7 }}
                      # #Debug for flaky clear
                      # - service: persistent_notification.create
                      #   data_template:
                      #     title: Slot 7
                      #     message: 'ozw clear_usercode called'
                  - conditions: >
                      {{ False == False }}
                  # this comment preserves formating
                    sequence:
                      - service: lock.set_usercode
                        data_template:
                          node_id: >-
                            {{ state_attr('lock.schlage_be469zp_locked_frontdoor','node_id') }}
                          code_slot: >-
                            {{ 7 }}
                          usercode: >-
                            {{ range(1000, 9999) | random | int }}
                      - service: lock.clear_usercode
                        data_template:
                          node_id: >-
                            {{ state_attr('lock.schlage_be469zp_locked_frontdoor','node_id') }}
                          code_slot: >-
                            {{ 7 }}
          
- alias: reset_codeslot_frontdoor_7
  trigger:
    entity_id: input_boolean.reset_codeslot_frontdoor_7
    platform: state
    to: 'on'
  action:
    - service: input_text.set_value
      data_template:
        entity_id: input_text.frontdoor_name_7
        value: ""
    - service: input_text.set_value
      data_template:
        entity_id: input_text.frontdoor_pin_7
        value: ""
    - service: input_boolean.turn_off
      entity_id: input_boolean.notify_frontdoor_7
    - service: input_boolean.turn_off
      entity_id: input_boolean.enabled_frontdoor_7
    - service: input_number.set_value
      data_template:
        entity_id: input_number.accesscount_frontdoor_7
        value: "0"
    - service: input_datetime.set_datetime
      entity_id: input_datetime.sun_start_date_frontdoor_7
      data_template:
        time: >
          {{  (("00:00")  | timestamp_custom("%H:%M"))  }}      
    - service: input_datetime.set_datetime
      entity_id: input_datetime.sun_end_date_frontdoor_7
      data_template:
        time: >
          {{  (("00:00")  | timestamp_custom("%H:%M"))  }}      
    - service: input_datetime.set_datetime
      entity_id: input_datetime.mon_start_date_frontdoor_7
      data_template:
        time: >
          {{  (("00:00")  | timestamp_custom("%H:%M"))  }}      
    - service: input_datetime.set_datetime
      entity_id: input_datetime.mon_end_date_frontdoor_7
      data_template:
        time: >
          {{  (("00:00")  | timestamp_custom("%H:%M"))  }}      
    - service: input_datetime.set_datetime
      entity_id: input_datetime.tue_start_date_frontdoor_7
      data_template:
        time: >
          {{  (("00:00")  | timestamp_custom("%H:%M"))  }}      
    - service: input_datetime.set_datetime
      entity_id: input_datetime.tue_end_date_frontdoor_7
      data_template:
        time: >
          {{  (("00:00")  | timestamp_custom("%H:%M"))  }}      
    - service: input_datetime.set_datetime
      entity_id: input_datetime.wed_start_date_frontdoor_7
      data_template:
        time: >
          {{  (("00:00")  | timestamp_custom("%H:%M"))  }}      
    - service: input_datetime.set_datetime
      entity_id: input_datetime.wed_end_date_frontdoor_7
      data_template:
        time: >
          {{  (("00:00")  | timestamp_custom("%H:%M"))  }}      
    - service: input_datetime.set_datetime
      entity_id: input_datetime.thu_start_date_frontdoor_7
      data_template:
        time: >
          {{  (("00:00")  | timestamp_custom("%H:%M"))  }}      
    - service: input_datetime.set_datetime
      entity_id: input_datetime.thu_end_date_frontdoor_7
      data_template:
        time: >
          {{  (("00:00")  | timestamp_custom("%H:%M"))  }}      
    - service: input_datetime.set_datetime
      entity_id: input_datetime.fri_start_date_frontdoor_7
      data_template:
        time: >
          {{  (("00:00")  | timestamp_custom("%H:%M"))  }}      
    - service: input_datetime.set_datetime
      entity_id: input_datetime.fri_end_date_frontdoor_7
      data_template:
        time: >
          {{  (("00:00")  | timestamp_custom("%H:%M"))  }}      
    - service: input_datetime.set_datetime
      entity_id: input_datetime.sat_start_date_frontdoor_7
      data_template:
        time: >
          {{  (("00:00")  | timestamp_custom("%H:%M"))  }}      
    - service: input_datetime.set_datetime
      entity_id: input_datetime.sat_end_date_frontdoor_7
      data_template:
        time: >
          {{  (("00:00")  | timestamp_custom("%H:%M"))  }}      
    - service: input_datetime.set_datetime
      entity_id: input_datetime.start_date_frontdoor_7
      data_template:
        date: >
          {{  (("1980-01-01")  | timestamp_custom("%Y %m %d"))  }}      
    - service: input_datetime.set_datetime
      entity_id: input_datetime.end_date_frontdoor_7
      data_template:
        date: >
          {{  (("1980-01-01")  | timestamp_custom("%Y %m %d"))  }}      
    - service: input_boolean.turn_off
      entity_id: input_boolean.daterange_frontdoor_7
    - service: input_boolean.turn_off
      entity_id: input_boolean.accesslimit_frontdoor_7
    - service: input_boolean.turn_off
      entity_id: input_boolean.reset_codeslot_frontdoor_7
    - service: input_boolean.turn_on
      entity_id: input_boolean.sun_frontdoor_7
    - service: input_boolean.turn_on
      entity_id: input_boolean.mon_frontdoor_7
    - service: input_boolean.turn_on
      entity_id: input_boolean.tue_frontdoor_7
    - service: input_boolean.turn_on
      entity_id: input_boolean.wed_frontdoor_7
    - service: input_boolean.turn_on
      entity_id: input_boolean.thu_frontdoor_7
    - service: input_boolean.turn_on
      entity_id: input_boolean.fri_frontdoor_7
    - service: input_boolean.turn_on
      entity_id: input_boolean.sat_frontdoor_7
    - service: input_boolean.turn_on
      entity_id: input_boolean.sun_inc_frontdoor_7
    - service: input_boolean.turn_on
      entity_id: input_boolean.mon_inc_frontdoor_7
    - service: input_boolean.turn_on
      entity_id: input_boolean.tue_inc_frontdoor_7
    - service: input_boolean.turn_on
      entity_id: input_boolean.wed_inc_frontdoor_7
    - service: input_boolean.turn_on
      entity_id: input_boolean.thu_inc_frontdoor_7
    - service: input_boolean.turn_on
      entity_id: input_boolean.fri_inc_frontdoor_7
    - service: input_boolean.turn_on
      entity_id: input_boolean.sat_inc_frontdoor_7
      
################  binary_sensor: #################  
binary_sensor:

- platform: template
  sensors:

    pin_synched_frontdoor_7:
      friendly_name: 'PIN synchronized with lock'
      value_template: >
        {% set lock = 'sensor.frontdoor_code_slot_7' %}
        {% set local = 'input_text.frontdoor_pin_7' %}
        {% set status = 'binary_sensor.active_frontdoor_7' %}
        {% set lockpin = states(lock).strip()  %}
        {% set localpin = states(local).strip()  %}
        {% set pinstatus = states(status)  %}
        {% if lockpin == "0000" %}
        {%   set lockpin = "" %}
        {% endif %}
        {% if pinstatus == 'on' %}
        {% set correct = localpin == lockpin %}
        {% else %}
        {% set correct = lockpin == "" %}
        {% endif %}
        {{ correct }}

    enabled_frontdoor_7:
      value_template: "{{ is_state('input_boolean.enabled_frontdoor_7', 'on') }}"

    daterange_frontdoor_7:
      value_template: "{{ (is_state('input_boolean.daterange_frontdoor_7', 'off') or ((states.input_datetime.start_date_frontdoor_7.attributes.timestamp| int | timestamp_custom('%Y%m%d', False)|int)|string <= now().strftime('%Y%m%d')) and (states.input_datetime.end_date_frontdoor_7.attributes.timestamp| int | timestamp_custom('%Y%m%d', False)|int)|string >=  now().strftime('%Y%m%d'))}}"

    sun_frontdoor_7:
      value_template: "{{ (( is_state('input_boolean.sun_frontdoor_7', 'on'))) and (strptime(states('sensor.date'), '%Y-%m-%d').strftime('%a') | lower == 'sun') and (is_state('input_boolean.sun_inc_frontdoor_7', 'on')) == ((states.input_datetime.sun_start_date_frontdoor_7.state == states.input_datetime.sun_end_date_frontdoor_7.state) or ((states('sensor.time') >= states('input_datetime.sun_start_date_frontdoor_7')[0:5]) and (states('sensor.time') <= states('input_datetime.sun_end_date_frontdoor_7')[0:5])) )}}"

    mon_frontdoor_7:
      value_template: "{{ (( is_state('input_boolean.mon_frontdoor_7', 'on'))) and (strptime(states('sensor.date'), '%Y-%m-%d').strftime('%a') | lower == 'mon') and (is_state('input_boolean.mon_inc_frontdoor_7', 'on')) == ((states.input_datetime.mon_start_date_frontdoor_7.state == states.input_datetime.mon_end_date_frontdoor_7.state) or ((states('sensor.time') >= states('input_datetime.mon_start_date_frontdoor_7')[0:5]) and (states('sensor.time') <= states('input_datetime.mon_end_date_frontdoor_7')[0:5])) )}}"

    tue_frontdoor_7:
      value_template: "{{ (( is_state('input_boolean.tue_frontdoor_7', 'on'))) and (strptime(states('sensor.date'), '%Y-%m-%d').strftime('%a') | lower == 'tue') and (is_state('input_boolean.tue_inc_frontdoor_7', 'on')) == ((states.input_datetime.tue_start_date_frontdoor_7.state == states.input_datetime.tue_end_date_frontdoor_7.state) or ((states('sensor.time') >= states('input_datetime.tue_start_date_frontdoor_7')[0:5]) and (states('sensor.time') <= states('input_datetime.tue_end_date_frontdoor_7')[0:5])) )}}"

    wed_frontdoor_7:
      value_template: "{{ (( is_state('input_boolean.wed_frontdoor_7', 'on'))) and (strptime(states('sensor.date'), '%Y-%m-%d').strftime('%a') | lower == 'wed') and (is_state('input_boolean.wed_inc_frontdoor_7', 'on')) == ((states.input_datetime.wed_start_date_frontdoor_7.state == states.input_datetime.wed_end_date_frontdoor_7.state) or ((states('sensor.time') >= states('input_datetime.wed_start_date_frontdoor_7')[0:5]) and (states('sensor.time') <= states('input_datetime.wed_end_date_frontdoor_7')[0:5])) )}}"

    thu_frontdoor_7:
      value_template: "{{ (( is_state('input_boolean.thu_frontdoor_7', 'on'))) and (strptime(states('sensor.date'), '%Y-%m-%d').strftime('%a') | lower == 'thu') and (is_state('input_boolean.thu_inc_frontdoor_7', 'on')) == ((states.input_datetime.thu_start_date_frontdoor_7.state == states.input_datetime.thu_end_date_frontdoor_7.state) or ((states('sensor.time') >= states('input_datetime.thu_start_date_frontdoor_7')[0:5]) and (states('sensor.time') <= states('input_datetime.thu_end_date_frontdoor_7')[0:5])) )}}"

    fri_frontdoor_7:
      value_template: "{{ (( is_state('input_boolean.fri_frontdoor_7', 'on'))) and (strptime(states('sensor.date'), '%Y-%m-%d').strftime('%a') | lower == 'fri') and (is_state('input_boolean.fri_inc_frontdoor_7', 'on')) == ((states.input_datetime.fri_start_date_frontdoor_7.state == states.input_datetime.fri_end_date_frontdoor_7.state) or ((states('sensor.time') >= states('input_datetime.fri_start_date_frontdoor_7')[0:5]) and (states('sensor.time') <= states('input_datetime.fri_end_date_frontdoor_7')[0:5])) )}}"

    sat_frontdoor_7:
      value_template: "{{ (( is_state('input_boolean.sat_frontdoor_7', 'on'))) and (strptime(states('sensor.date'), '%Y-%m-%d').strftime('%a') | lower == 'sat') and (is_state('input_boolean.sat_inc_frontdoor_7', 'on')) == ((states.input_datetime.sat_start_date_frontdoor_7.state == states.input_datetime.sat_end_date_frontdoor_7.state) or ((states('sensor.time') >= states('input_datetime.sat_start_date_frontdoor_7')[0:5]) and (states('sensor.time') <= states('input_datetime.sat_end_date_frontdoor_7')[0:5])) )}}"

    smtwtfs_frontdoor_7:
      friendly_name: "Status"
      value_template: >- 
         {{
            is_state('binary_sensor.sun_frontdoor_7', 'on')  or  
            is_state('binary_sensor.mon_frontdoor_7', 'on')  or  
            is_state('binary_sensor.tue_frontdoor_7', 'on')  or  
            is_state('binary_sensor.wed_frontdoor_7', 'on')  or  
            is_state('binary_sensor.thu_frontdoor_7', 'on')  or  
            is_state('binary_sensor.fri_frontdoor_7', 'on')  or  
            is_state('binary_sensor.sat_frontdoor_7', 'on')   
         }}
    
    access_count_frontdoor_7:
      friendly_name: "Access Count"
      value_template: >-
         {{
            (is_state('input_boolean.accesslimit_frontdoor_7', 'off'))  or  
            (states.input_number.accesscount_frontdoor_7.state | int > 0)
         }}

    active_frontdoor_7:
      friendly_name: "Status"
      value_template: >-
         {{
            is_state('binary_sensor.enabled_frontdoor_7', 'on')  and  
            is_state('binary_sensor.access_count_frontdoor_7', 'on')  and  
            is_state('binary_sensor.daterange_frontdoor_7', 'on') and
            is_state('binary_sensor.smtwtfs_frontdoor_7', 'on')  
         }}
      device_class: connectivity

###################  sensor:  ####################  
